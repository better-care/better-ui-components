$font-size-base: 1rem;
$fa-font-path: "~@fortawesome/fontawesome-free/webfonts";

@import "~bootstrap/scss/bootstrap";
@import "styles/variables";
@import '~@fortawesome/fontawesome-free/scss/fontawesome';
@import '~@fortawesome/fontawesome-free/scss/regular';
@import '~@fortawesome/fontawesome-free/scss/solid';

body {
  font-family: Lato, sans-serif;
  overflow: hidden;

  .fixed-nav {
    margin-left: $navbar-width;
  }

  .dropdown-menu {
    z-index: 1500;
  }

  .tooltip {
    z-index: 1550;
  }
}

/**
 * use this element to append modal windows:
 * NgbModal.options.container = '#modal-container'
 */
#modal-container {
  position: absolute;
  top: 0;
  left: 0;
}

/* Override ngbmodal behaviour for outlining close button by default */
.modal-header {
  .close {
    outline: none;
  }

  .icon {
    font-size: 5rem;
    margin-right: 50px;
  }
}

.btn {
  &:focus {
    border: 0 !important;
  }
}

.app-container {
  height: $container-height;
}

.pointer {
  cursor: pointer;
}

#tree-name {
  margin-bottom: 6px;
  padding: 18px 0 0 10px;
}

.template-title {
      display: block;
      width: 100%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      font-weight: 600;
      letter-spacing: 0.26px;
      color: $black;
}

.left-sidebar-panel {
  .left-panel-text {
    font-size: 13px;
    font-weight: 600;
  }

  label {
    font-size: 12px;
    font-weight: 600;
    color: $charcoal-grey-two;
  }

  .btn-sm {
    font-size: 13px;
  }
}

.icon {
  &.disabled {
    filter: grayscale(100%);
    opacity: 0.4;
  }
}

// Navbar

#nav-logo {
  color: $logo-color-secondary;
  width: 30px;
  margin-bottom: 15px;
}

.btn-nav {
  color: $gray;
  padding: 0;
  margin: 12px 0;

  &.active,
  &:hover {
    color: $logo-color;
  }
}

.replace-field {
  .dropdown-menu {
    &[id^='ngb-typeahead'] {
      .dropdown-item {
        &.first-generic {
          border-top: 1px solid $brand-primary;
          &:first-child {
            border-top: 0;
          }
        }
      }
    }
  }
}


input {
  &.form-control, &.form-check-input {
    &.invalid {
      border: 2px solid $danger;
    }
    &.below-template-min {
      border: 2px solid orange;
    }
  }
}

.form-check-inline {
  .form-check-input {
    margin-top: -1px;
  }
}

.toast-container {

  .ngx-toastr {
    min-width: 30vw;
    background-color: $white;
    box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.17), 0 1px 26px 0 rgba(0, 0, 0, 0.15);
    color: $black;
    padding-right: 2rem;
    border: 0;
    display: block;

    &:hover {
      box-shadow: 0 0 2px 0 rgba(0, 0, 0, 0.17), 0 1px 26px 0 rgba(0, 0, 0, 0.15);
    }

    &.toast-error,
    &.toast-warning {
      background-image: url("./assets/icons/openEHR/toast-error-icon.svg");
    }

    &.toast-success {
      background-image: none;
      padding: 0.75rem 2.5rem 0.75rem 1.25rem;
    }

    .toast-title {
      font-weight: 600;
      font-size: 0.8rem;
    }

    .toast-message {
      font-size: 0.8rem;
      font-weight: 600;
    }

    .toast-title + .toast-message {
      font-weight: 400;
    }

    .toast-close-button {
      position: absolute;
      right: 0.8rem;
      top: 50%;
      transform: translateY(-50%);
      float: right;
      font-size: 25px;
      font-weight: 400;
      }
    }
}

.property-title {
  color: $charcoal-grey-two;
  border-bottom: 1px solid #9f9f9f;
  font-size: 0.8rem;
  letter-spacing: 0.5px;
  margin-left: -15px;
  margin-right: -15px;
  padding-left: 15px;
  padding-right: 15px;
  font-weight: 700;
  text-transform: uppercase;
}

.text-color {
  &.success {
    color: $primary-green;
  }

  &.warning {
    color: $primary-orange;
  }

  &.danger {
    color: $primary-red;
  }

  &.grey {
    color: $light-gray;
  }

  &.primary {
    color: $brand-primary;
  }
}
 // Override bootstrap custom control

.custom-control-label {
  font-size: 14px;
  font-weight: 600;
  color: $bluish-grey-text;
  top: 0.1rem;

  &::after,
  &::before {
    top: -.1rem; // align label and checkbox
  }
}

.aql-button {
  padding: 0;
  border-radius: 0;
  background-color: transparent;
  color: darken($better-bc3, 20%);
  font-weight: 600;
  font-size: 0.8rem;
  width: 40px;
  height: 40px;

  &:hover {
    opacity: 1;
    color: $logo-color-secondary;
    transform: scale(1.2);
  }

  &:disabled {
    filter: grayscale(100%);
    pointer-events: none;
  }
}

.aql-params-label {
  font-size: 12px;
  font-weight: 600;
}

.editor-tab--action-btn {
  background-color: transparent;
  color: $brand-primary;

  &:hover {
    color: $dodger-blue;
  }
}

.text-btn {
  color: $black;
  font-weight: 600;
  font-size: 14px;

  &:hover:enabled {
    color: lighten($primary-blue, 10%);
  }

  &:disabled {
    filter: grayscale(100%);
    pointer-events: none;
  }
}

.vertical-ruler {
  vertical-align: middle;
  display: inline-block;
  width: 1px;
  height: 1.4rem;
  background-color: #e9e9eb;
}

.dropdown {
  .no-arrow {
    &::after {
      display: none;
    }
  }
}

.fb-template-search-input {
  $top-input-offset: 6px;

  position: relative;
  top: $top-input-offset;

  .fb-input {
    top: $top-input-offset;
    height: 33px;
    margin-bottom: 0.5rem;
    padding-right: 90px;

    + .fb-input-text {
      top: $top-input-offset;
      right: 70px;
    }

    ~ .fb-input-action {
      top: $top-input-offset;
      position: absolute;
      cursor: pointer;

      &.disabled {
        color: $gray;
        pointer-events: none;
        cursor: not-allowed;
      }

      &.clear {
        right: 10px
      }
      &.next {
        right: 28px
      }
      &.previous {
        right: 44px
      }
    }

    ~ .fb-action-divider {
      top: $top-input-offset;
      position: absolute;
      right: 58px;
      border-left: thin solid $light-gray;
    }
  }

}

.highlight-field {
  font-weight: 600;
  color: $black;
}

.highlight-field-selected {
  background-color: $secondary-blue;
  border-radius: 4px;
}


// opacity for ng-toastr should be set explicitly because bootstrap overrides it
.toast-container {
  bottom: 32px;
  .toast {
    opacity: 1;
  }
}

.btn + .btn {
  margin-left: 0.5rem;
}

/**
 * Inputs
 */
.aql-input {
  height: 32px;
  padding: 0.375rem 0.75rem;
  border-radius: 6px;
  background-color: #fefefe;
  font-size: 14px;
  font-weight: 400;
  box-shadow: 0 2px 2px #e3e3e3;
  border: none;
}

.aql-label {
  font-style: italic;
  color: #6c757d;
  padding-bottom: 2px;
  margin-bottom: 0;
}

.table-striped > tbody > tr:nth-child(odd) > td {
  background-color: #f8f9fa !important;;
}


#js-console-wrapper {
  height: inherit;
  overflow-y: auto;
  background-color: white;
  padding: 10px;
  border-radius: 5px;

  .error {
    color: red;
  }

  .info {
    color: #F7DC6F;
  }

  .warn {
    color: orange;
  }

  .log {
    color: green;
  }

  .code-wrapper {
    width: 100%;
    margin-top: 10px;
    clear: both;
    float: left;
    overflow: auto;
    white-space: pre-wrap;
  }

}

.resize-handle {
  position: absolute;
  bottom: 5px;
  left: 50%;
  transform: translateX(-50%);
  width: 100px;
  height: 5px;
  border-radius: 20px;
  font-size: 4px;
  font-weight: 900;
  letter-spacing: 0;
  text-align: center;
  color: $white;
  background-color: $very-light-border;
  z-index: 1050;
  cursor: row-resize;

  &::before {
    content: "";
    position: absolute;
    left: -50px;
    top: -3px;
    padding: 5px 100px;
    height: 15px;
  }

  &:hover {
    opacity: 1;
    background-color: $dodger-blue;
  }

  &.right {
    top: 50%;
    bottom: auto;
    left: auto;
    right: 20px;
    transform: translate($navbar-width, -50%) rotate(-90deg);
    cursor: col-resize;
  }
}

.popover {
  max-width: 600px;
  word-break: break-word;
}

.no-pointer-events {
  pointer-events: none;
}
